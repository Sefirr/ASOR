#include <unistd.h>
#include <fcntl.h>
#include <stdlib.h>
#include <errno.h>
#include <stdio.h>
#include <time.h>
#include <sys/types.h>

int main(int argc, char **argv) {

	int fd;

	struct flock fl,savelock;
	
	if((fd = open(argv[1], O_CREAT | O_RDWR, 0666) == -1)) {
		perror("open()");
		exit(EXIT_FAILURE);
	}

	fl.l_type    = F_WRLCK;   /* Test for any lock on any part of file. */
	fl.l_start   = 0;
	fl.l_whence  = SEEK_SET;
	fl.l_len     = 0;        
  	savelock = fl;
  	fcntl(fd, F_GETLK, &fl);  /* Overwrites lock structure with preventors. */
	if (fl.l_type == F_WRLCK) {
		printf("Process %i has a write lock already!\n", fl.l_pid);
	     	exit(1);
	} else if (fl.l_type == F_RDLCK) {
	  	printf("Process %i has a read lock already!\n", fl.l_pid);
	     	exit(1);
	} else {
	 	fcntl(fd, F_SETLK, &savelock);
	  	pause();
	}

	return 0;
}
